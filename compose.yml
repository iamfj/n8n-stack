services:
  postgres:
    build:
      context: postgres
      dockerfile: Containerfile
      args:
        POSTGRES_VERSION: latest
        N8N_POSTGRES_USER: ${N8N_POSTGRES_USER}
        N8N_POSTGRES_PASSWORD: ${N8N_POSTGRES_PASSWORD}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  zoo:
    image: confluentinc/cp-zookeeper
    restart: unless-stopped
    env_file:
      - .env
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka
    restart: unless-stopped
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      zoo:
        condition: service_healthy
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3

  kafka-ui:
    image: provectuslabs/kafka-ui
    restart: unless-stopped
    env_file:
      - .env
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zoo:2181
    depends_on:
      kafka:
        condition: service_healthy
      zoo:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://host.docker.internal:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  n8n:
    build:
      context: n8n
      dockerfile: Containerfile
      args:
        N8N_VERSION: latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      LOG_LEVEL: debug
      NODE_ENV: production
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: postgres
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_SCHEMA: n8n
      N8N_PORT: 5678
      N8N_TEMPLATES_ENABLED: false
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
      N8N_RUNNERS_ENABLED: true
    volumes:
      - n8n_data:/home/node/.n8n
      - n8n_local_files:/files
      - ./n8n/credentials.json:/tmp/credentials.json:ro
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://host.docker.internal:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
